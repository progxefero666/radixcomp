// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// CodeLang excluded fields:
// 
model CodeLang {
  id           Int           @id @default(autoincrement())
  cgname       String        @unique @db.VarChar(20)
  description  String        @db.VarChar(150)
  tasks        task[]
  applications Application[]

  @@map("codelang")
}

// TaskType excluded fields:
//   
model TaskType {
  id          Int    @id @default(autoincrement())
  tename      String @unique @db.VarChar(100)
  description String @db.VarChar(200)
  tasks       task[]

  @@map("tasktype")
}

// Workflow excluded fields:
//
model Workflow {
  id          Int      @id @default(autoincrement())
  wwname      String   @unique @db.VarChar(100)
  description String   @db.Text
  application String?  @db.VarChar(50)
  fpath       String?  @db.VarChar(500)
  updated     DateTime @default(dbgenerated("CURRENT_DATE"))
  context     String?  @db.Text
  tasks       task[]

  @@map("workflow")
}

// Task excluded fields:
//
model task {
  id          Int      @id @default(autoincrement())
  tasktype    TaskType @relation(fields: [tasktypeId], references: [id], onDelete: Cascade)
  tasktypeId  Int      @map("tasktype_id")
  codelang    CodeLang @relation(fields: [codelangId], references: [id], onDelete: Cascade)
  codelangId  Int      @map("codelang_id")
  workflow    Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  workflowId  Int      @map("workflow_id")
  orden       Int
  tkname      String   @unique @db.VarChar(255)
  description String?  @db.Text
  files       String?  @db.Text
  folders     String?  @db.Text
  wgroup      String   @unique @db.VarChar(100)

  @@map("task")
}

// AppType excluded fields:
//
model AppType {
  id           Int           @id @default(autoincrement())
  aename       String        @unique @db.VarChar(50)
  description  String        @default("undefined") @db.VarChar(255)
  applications Application[]

  @@map("apptype")
}

// Application excluded fields:
//
model Application {
  id           Int      @id @default(autoincrement())
  apptype      AppType  @relation(fields: [apptypeId], references: [id], onDelete: Cascade)
  apptypeId    Int
  codelang     CodeLang @relation(fields: [codelangId], references: [id], onDelete: Cascade)
  codelangId   Int
  anname       String   @unique @db.VarChar(50)
  description  String   @default("undefined") @db.VarChar(255)
  repository   String   @default("undefined") @db.VarChar(250)
  author       String?  @db.VarChar(100)
  osystem      String?  @db.VarChar(100)
  appurl       String?  @db.VarChar(500)
  apppath      String?  @db.VarChar(500)
  localdev     Boolean  @default(true)
  usedocker    Boolean  @default(false)
  controlusers Boolean  @default(false)
  useui        Boolean  @default(false)
  useagents    Boolean  @default(false)
  consumedb    Boolean  @default(false)
  consumeapi   Boolean  @default(false)
  consumeai    Boolean  @default(false)
  exposedb     Boolean  @default(false)
  exposeapi    Boolean  @default(false)
  updated      DateTime @default(dbgenerated("CURRENT_DATE"))

  @@map("application")
}
